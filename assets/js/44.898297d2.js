(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{530:function(n,t,a){"use strict";a.r(t);var e=a(4),o=Object(e.a)({},(function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"设置固定位置的标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置固定位置的标签"}},[n._v("#")]),n._v(" 设置固定位置的标签")]),n._v(" "),a("p",[n._v("用 "),a("RouterLink",{attrs:{to:"/zh/guide/positioning.html#position"}},[n._v("position")]),n._v(" 指定标签绘制位置，如在悬浮时显示对应的百分比。")],1),n._v(" "),a("chart-editor",{attrs:{code:"// <block:setup:2>\nvar DATA_COUNT = 3;\nvar labels = [\n  'one',\n  'two',\n  'three'\n];\n\nUtils.srand(3);\n// </block:setup>\n\nvar config = /* <block:config:0> */ {\n  type: 'doughnut',\n  data: {\n    labels: labels,\n    datasets: [{\n      backgroundColor: Utils.colors({\n        color: Utils.color(1),\n        mode: 'darken'\n      }),\n      hoverBorderColor: 'white',\n      data: Utils.numbers({\n        count: DATA_COUNT,\n        min: 0,\n        max: 100\n      }),\n      datalabels: {\n        labels: {\n          value: {\n            textAlign: 'center',\n            position: 'center',\n            formatter: function(value, ctx) {\n              const data = ctx.dataset.data.reduce((pre, next) => {\n                return pre + next\n              }, 0);\n              const percent = (value / data) * 100;\n              return [percent.toFixed(2) + '%', labels[ctx.dataIndex]];\n            }\n          }\n        }\n      }\n    }]\n  },\n  options: {\n    plugins: {\n      datalabels: {\n        color: Utils.color(1),\n        display: function(ctx) {\n          return ctx.active;\n        },\n        font: {\n          weight: 'bold',\n          size: 20\n        }\n      }\n    },\n\n    // Core options\n    aspectRatio: 3 / 2,\n    layout: {\n      padding: 16\n    },\n    elements: {\n      line: {\n        fill: false,\n        tension: 0.4\n      }\n    },\n  }\n} /* </block:config> */;\n\nvar actions = [\n  {\n    name: 'Randomize',\n    handler: function(chart) {\n      chart.data.datasets.forEach(function(dataset, i) {\n        dataset.backgroundColor = Utils.colors({\n          color: Utils.color(),\n          mode: 'darken'\n        });\n        dataset.data = dataset.data.map(function(value) {\n          return Utils.rand(0, 100);\n        });\n      });\n      chart.update();\n    }\n  }\n];\n\nmodule.exports = {\n  actions: actions,\n  config: config,\n};\n"}})],1)}),[],!1,null,null,null);t.default=o.exports}}]);